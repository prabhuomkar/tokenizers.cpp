name: tokenizers.cpp CI
on:
  push:
    paths-ignore:
      - .gitignore
      - .clang-format
      - README.md
      - CONTRIBUTING.md
      - LICENSE
      - docs/*
    branches:    
      - master
  pull_request:
    branches:
      - master
env:
  ICU_MAJOR_VERSION: 76
  ICU_MINOR_VERSION: 1
  LIBTORCH_VERSION: 2.5.1
jobs:
  ci-ubuntu:
    name: CI for Ubuntu
    runs-on: ubuntu-24.04
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.22.1'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libicu-dev
          wget "https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-${LIBTORCH_VERSION}%2Bcpu.zip" && unzip libtorch-cxx11-abi-shared-with-deps-${LIBTORCH_VERSION}+cpu.zip -d examples/libtorch-bert
          pip install cpplint
      - name: Run Lint
        run: cpplint --recursive include/ src/ tests/
      - name: Run Build
        run: |
          cmake -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON .
          make
      - name: Run Tests
        run: |
          ctest --output-on-failure
  ci-macos:
    name: CI for macOS
    runs-on: macos-14
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.22.1'
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Download Prebuilt ICU
        working-directory: scripts/icu4c
        run: |
          wget "https://github.com/prabhuomkar/tokenizers.cpp/releases/download/icu-${ICU_MAJOR_VERSION}-${ICU_MINOR_VERSION}/ios-icu-${ICU_MAJOR_VERSION}-${ICU_MINOR_VERSION}.tar.gz" && tar -xvf ios-icu-${ICU_MAJOR_VERSION}-${ICU_MINOR_VERSION}.tar.gz
      - name: Install Dependencies
        run: |
          wget "https://download.pytorch.org/libtorch/cpu/libtorch-macos-arm64-${LIBTORCH_VERSION}.zip" && unzip libtorch-macos-arm64-${LIBTORCH_VERSION}.zip -d examples/libtorch-bert
          pip install cpplint
      - name: Run Lint
        run: cpplint --recursive include/ src/ tests/
      - name: Run Build
        run: |
          export ICU_PREFIX=$(brew --prefix icu4c)
          cmake -DICU_ROOT=$ICU_PREFIX -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON .
          make
      - name: Run Tests
        run: |
          ctest --output-on-failure
  ci-android:
    name: CI for Android
    runs-on: ubuntu-24.04
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.22.1'
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: 'tools platform-tools platforms;android-34'
      - name: Install NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26c
          link-to-sdk: true
      - name: Download Prebuilt ICU
        working-directory: scripts/icu4c
        run: |
          wget "https://github.com/prabhuomkar/tokenizers.cpp/releases/download/icu-${ICU_MAJOR_VERSION}-${ICU_MINOR_VERSION}/android-icu-${ICU_MAJOR_VERSION}-${ICU_MINOR_VERSION}.tar.gz" && tar -xvf android-icu-${ICU_MAJOR_VERSION}-${ICU_MINOR_VERSION}.tar.gz
      - name: Run Build
        working-directory: android
        run: |
          sudo apt-get install ninja-build
          ./gradlew build --no-daemon
      - name: Run Tests
        working-directory: android
        run: |
          echo "Run android instrumented tests"
